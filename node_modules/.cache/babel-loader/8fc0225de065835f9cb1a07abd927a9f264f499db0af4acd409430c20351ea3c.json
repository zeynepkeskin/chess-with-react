{"ast":null,"code":"import { PieceType, TeamType, Piece } from \"../components/Chessboard/Chessboard\";\nexport default class Referee {\n  tileIsOccupied(x, y, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    if (piece) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isValidMove(px, py, x, y, type, team, boardState) {\n    if (type === PieceType[0]) {\n      const specialRow = team === TeamType[1] ? 1 : 6;\n      const pawnDirection = team === TeamType[1] ? 1 : -1;\n      if (py === specialRow) {\n        if (px === x && y - py === 1 * pawnDirection) {\n          if (!this.tileIsOccupied(x, y, boardState)) {\n            return true;\n          }\n        } else if (px === x && y - py === 2 * pawnDirection) {\n          if (!this.tileIsOccupied(x, y, boardState) && !this.tileIsOccupied(x, y - pawnDirection, boardState)) {\n            return true;\n          }\n        }\n      } else {\n        if (px === x && y - py === pawnDirection) {\n          if (!this.tileIsOccupied(x, y, boardState)) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["PieceType","TeamType","Piece","Referee","tileIsOccupied","x","y","boardState","piece","find","p","isValidMove","px","py","type","team","specialRow","pawnDirection"],"sources":["C:/Users/zeyne/OneDrive/Desktop/chess/chess/src/referee/Referee.js"],"sourcesContent":["import {\r\n  PieceType,\r\n  TeamType,\r\n  Piece,\r\n} from \"../components/Chessboard/Chessboard\";\r\n\r\nexport default class Referee {\r\n  tileIsOccupied(x, y, boardState) {\r\n    const piece = boardState.find((p) => p.x === x && p.y === y);\r\n    if (piece) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isValidMove(px, py, x, y, type, team, boardState) {\r\n    if (type === PieceType[0]) {\r\n      const specialRow = team === TeamType[1] ? 1 : 6;\r\n      const pawnDirection = team === TeamType[1] ? 1 : -1;\r\n\r\n      if (py === specialRow) {\r\n        if (px === x && y - py === 1 * pawnDirection) {\r\n          if (!this.tileIsOccupied(x, y, boardState)) {\r\n            return true;\r\n          }\r\n        } else if (px === x && y - py === 2 * pawnDirection) {\r\n          if (\r\n            !this.tileIsOccupied(x, y, boardState) &&\r\n            !this.tileIsOccupied(x, y - pawnDirection, boardState)\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n      } else {\r\n        if (px === x && y - py === pawnDirection) {\r\n          if (!this.tileIsOccupied(x, y, boardState)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,QAAQ,EACRC,KAAK,QACA,qCAAqC;AAE5C,eAAe,MAAMC,OAAO,CAAC;EAC3BC,cAAcA,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,EAAE;IAC/B,MAAMC,KAAK,GAAGD,UAAU,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,CAAC,KAAKA,CAAC,IAAIK,CAAC,CAACJ,CAAC,KAAKA,CAAC,CAAC;IAC5D,IAAIE,KAAK,EAAE;MACT,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;EAEAG,WAAWA,CAACC,EAAE,EAAEC,EAAE,EAAER,CAAC,EAAEC,CAAC,EAAEQ,IAAI,EAAEC,IAAI,EAAER,UAAU,EAAE;IAChD,IAAIO,IAAI,KAAKd,SAAS,CAAC,CAAC,CAAC,EAAE;MACzB,MAAMgB,UAAU,GAAGD,IAAI,KAAKd,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MAC/C,MAAMgB,aAAa,GAAGF,IAAI,KAAKd,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAEnD,IAAIY,EAAE,KAAKG,UAAU,EAAE;QACrB,IAAIJ,EAAE,KAAKP,CAAC,IAAIC,CAAC,GAAGO,EAAE,KAAK,CAAC,GAAGI,aAAa,EAAE;UAC5C,IAAI,CAAC,IAAI,CAACb,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,EAAE;YAC1C,OAAO,IAAI;UACb;QACF,CAAC,MAAM,IAAIK,EAAE,KAAKP,CAAC,IAAIC,CAAC,GAAGO,EAAE,KAAK,CAAC,GAAGI,aAAa,EAAE;UACnD,IACE,CAAC,IAAI,CAACb,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,IACtC,CAAC,IAAI,CAACH,cAAc,CAACC,CAAC,EAAEC,CAAC,GAAGW,aAAa,EAAEV,UAAU,CAAC,EACtD;YACA,OAAO,IAAI;UACb;QACF;MACF,CAAC,MAAM;QACL,IAAIK,EAAE,KAAKP,CAAC,IAAIC,CAAC,GAAGO,EAAE,KAAKI,aAAa,EAAE;UACxC,IAAI,CAAC,IAAI,CAACb,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,EAAE;YAC1C,OAAO,IAAI;UACb;QACF;MACF;IACF;IAEA,OAAO,KAAK;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}