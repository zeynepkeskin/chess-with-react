{"ast":null,"code":"import { PieceType, TeamType, Piece } from \"../components/Chessboard/Chessboard\";\nexport default class Referee {\n  tileIsOccupied(x, y, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    return true;\n  }\n  isValidMove(px, py, x, y, type, team, boardState) {\n    if (type === PieceType[0]) {\n      if (team === TeamType[1]) {\n        if (py === 1) {\n          if (px === x && (y - py === 1 || y - py === 2)) {\n            if (!this.tileIsOccupied(x, y, boardState)) {\n              return true;\n            }\n          }\n        } else {\n          if (px === x && y - py === 1) {\n            if (!this.tileIsOccupied(x, y, boardState)) {\n              return true;\n            }\n          }\n        }\n      } else {\n        if (py === 6) {\n          if (px === x && (y - py === -1 || y - py === -2)) {\n            return true;\n          }\n        } else {\n          if (px === x && y - py === -1) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["PieceType","TeamType","Piece","Referee","tileIsOccupied","x","y","boardState","piece","find","p","isValidMove","px","py","type","team"],"sources":["C:/Users/zeyne/OneDrive/Desktop/chess/chess/src/referee/Referee.js"],"sourcesContent":["import {\r\n  PieceType,\r\n  TeamType,\r\n  Piece,\r\n} from \"../components/Chessboard/Chessboard\";\r\n\r\nexport default class Referee {\r\n  tileIsOccupied(x, y, boardState) {\r\n    const piece = boardState.find((p) => p.x === x && p.y === y);\r\n    return true;\r\n  }\r\n\r\n  isValidMove(px, py, x, y, type, team, boardState) {\r\n    if (type === PieceType[0]) {\r\n      if (team === TeamType[1]) {\r\n        if (py === 1) {\r\n          if (px === x && (y - py === 1 || y - py === 2)) {\r\n            if (!this.tileIsOccupied(x, y, boardState)) {\r\n              return true;\r\n            }\r\n          }\r\n        } else {\r\n          if (px === x && y - py === 1) {\r\n            if (!this.tileIsOccupied(x, y, boardState)) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (py === 6) {\r\n          if (px === x && (y - py === -1 || y - py === -2)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          if (px === x && y - py === -1) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,QAAQ,EACRC,KAAK,QACA,qCAAqC;AAE5C,eAAe,MAAMC,OAAO,CAAC;EAC3BC,cAAcA,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,EAAE;IAC/B,MAAMC,KAAK,GAAGD,UAAU,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,CAAC,KAAKA,CAAC,IAAIK,CAAC,CAACJ,CAAC,KAAKA,CAAC,CAAC;IAC5D,OAAO,IAAI;EACb;EAEAK,WAAWA,CAACC,EAAE,EAAEC,EAAE,EAAER,CAAC,EAAEC,CAAC,EAAEQ,IAAI,EAAEC,IAAI,EAAER,UAAU,EAAE;IAChD,IAAIO,IAAI,KAAKd,SAAS,CAAC,CAAC,CAAC,EAAE;MACzB,IAAIe,IAAI,KAAKd,QAAQ,CAAC,CAAC,CAAC,EAAE;QACxB,IAAIY,EAAE,KAAK,CAAC,EAAE;UACZ,IAAID,EAAE,KAAKP,CAAC,KAAKC,CAAC,GAAGO,EAAE,KAAK,CAAC,IAAIP,CAAC,GAAGO,EAAE,KAAK,CAAC,CAAC,EAAE;YAC9C,IAAI,CAAC,IAAI,CAACT,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,EAAE;cAC1C,OAAO,IAAI;YACb;UACF;QACF,CAAC,MAAM;UACL,IAAIK,EAAE,KAAKP,CAAC,IAAIC,CAAC,GAAGO,EAAE,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,IAAI,CAACT,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,EAAE;cAC1C,OAAO,IAAI;YACb;UACF;QACF;MACF,CAAC,MAAM;QACL,IAAIM,EAAE,KAAK,CAAC,EAAE;UACZ,IAAID,EAAE,KAAKP,CAAC,KAAKC,CAAC,GAAGO,EAAE,KAAK,CAAC,CAAC,IAAIP,CAAC,GAAGO,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;YAChD,OAAO,IAAI;UACb;QACF,CAAC,MAAM;UACL,IAAID,EAAE,KAAKP,CAAC,IAAIC,CAAC,GAAGO,EAAE,KAAK,CAAC,CAAC,EAAE;YAC7B,OAAO,IAAI;UACb;QACF;MACF;IACF;IAEA,OAAO,KAAK;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}